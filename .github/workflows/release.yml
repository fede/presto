name: Release and Update

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' 
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Sync node version and setup cache
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install frontend dependencies
        run: npm ci

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Presto v__VERSION__'
          releaseBody: |
            ## What's Changed
            
            See the assets below to download this version and install.
            
            ### Installation Notes
            
            **macOS**: Download the `.dmg` file for your architecture:
            - `presto_x.x.x_aarch64.dmg` for Apple Silicon (M1/M2/M3 Macs)
            - `presto_x.x.x_x64.dmg` for Intel Macs
            
            **Windows**: Download the `.msi` file:
            - `presto_x.x.x_x64_en-US.msi` for 64-bit Windows
            
            **Linux**: Download the `.AppImage` or `.deb` file:
            - `presto_x.x.x_amd64.AppImage` for portable installation
            - `presto_x.x.x_amd64.deb` for Debian/Ubuntu systems
            
            ### Auto-Updates
            
            This release supports automatic updates. If you're running a previous version, you'll be notified when this update is available and can install it directly from the app.
            
            **Full Changelog**: https://github.com/${{ github.repository }}/compare/v${{ github.event.before }}...${{ github.ref_name }}
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          includeDebug: false
          includeRelease: true

  publish-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Publish release
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const tag = context.ref.replace('refs/tags/', '');
            
            // Get the draft release
            const releases = await github.rest.repos.listReleases({
              owner,
              repo,
            });
            
            const draftRelease = releases.data.find(release => 
              release.tag_name === tag && release.draft
            );
            
            if (draftRelease) {
              // Publish the release
              await github.rest.repos.updateRelease({
                owner,
                repo,
                release_id: draftRelease.id,
                draft: false
              });
              
              console.log(`Published release ${tag}`);
            } else {
              console.log(`No draft release found for tag ${tag}`);
            }
